/*! `lean` grammar compiled for Highlight.js 11.8.0 */
// NOTE: modified by hand

var LEAN_IDENT_RE = /[A-Za-z_][\w\u207F-\u209C\u1D62-\u1D6A\u2079\']*/;

(
    () => {
        var e = (
            () => {
                'use strict';
                function e(e) {
                    return e &&
                        e.__esModule &&
                        Object.prototype.hasOwnProperty.call(e, 'default') ? e.default : e
                }
                return e(
                    (
                        e => {
                            var a = {
                                $pattern: /\w+|\u03bb|\u2200|\u03a0|\u2203|:=?/u,
                                keyword: 'theorem|10 lemma|10 definition abbrev def class structure instance example inductive coinductive axiom axioms hypothesis constant constants universe universes variable variables parameter parameters begin end infix infixr import open theory prelude renaming hiding exposing calc  match do  by let in extends fun assume where #check #eval #reduce #print λ ∀ ∃ ⨁ Π',
                                built_in: 'Type Prop|10 Sort rw|10 rewrite rwa erw subst substs simp dsimp simpa simp_intros finish unfold unfold1 dunfold unfold_projs unfold_coes delta cc ac_reflexivity ac_refl existsi|10 cases rcases with intro intros introv by_cases refl rfl funext propext exact exacts refine apply eapply fapply apply_with apply_instance induction rename assumption revert generalize specialize clear contradiction by_contradiction by_contra trivial exfalso symmetry transitivity destruct constructor econstructor left right split injection injections repeat try continue skip swap solve1 abstract all_goals any_goals done fail_if_success success_if_fail guard_target guard_hyp have replace at suffices show from congr congr_n congr_arg norm_num ring ',
                                literal: 'tt ff',
                                meta: 'noncomputable|10 private protected meta mutual',
                                section: 'section namespace end',
                                sorry: 'sorry admit',
                                symbol: ':='
                            },
                                n = e.COMMENT('--', '$'),
                                s = e.COMMENT('/-[^-]', '-/'),
                                t = {
                                    className: 'theorem',
                                    beginKeywords: 'abbrev def theorem lemma class instance structure',
                                    end: /:=|$/,
                                    excludeEnd: true,
                                    contains: [
                                        {
                                            className: 'keyword',
                                            begin: /extends/,
                                            contains: [
                                                {
                                                    className: 'symbol',
                                                    begin: /:=/,
                                                    endsParent: true
                                                }
                                            ]
                                        },
                                        {
                                            className: 'params',
                                            begin: /[([{]/,
                                            end: /[)\]}]/,
                                            excludeBegin: true,
                                            excludeEnd: true,
                                            endsParent: false,
                                            keywords: a
                                        },
                                        {
                                            className: 'symbol',
                                            begin: /:=/,
                                            endsParent: true
                                        },
                                        {
                                            className: 'symbol',
                                            begin: /:/,
                                            endsParent: false
                                        }
                                    ],
                                    keywords: a
                                };
                            var PARAMS = {
                                className: 'params',
                                begin: /[([{]/,
                                end: /[)\]}]/,
                                contains: [
                                    {
                                        // Does not work
                                        className: 'open-paren',
                                        begin: /[\([{]/,
                                        endsParent: false,
                                    },
                                    {
                                        className: 'close-paren',
                                        begin: /[)\]}]/,
                                        endsParent: true,
                                    },
                                ],
                                keywords: a
                            }

                            var LEAN_DEFINITION = {
                                className: 'theorem',
                                beginKeywords: 'abbrev def theorem lemma class instance structure',
                                end: /:=/,
                                excludeEnd: true,
                                contains: [
                                    {
                                        className: 'keyword',
                                        begin: /extends/,
                                        contains: [
                                            {
                                                className: 'symbol',
                                                begin: /:=/,
                                                endsParent: true
                                            },
                                        ]
                                    },
                                    e.inherit(e.TITLE_MODE, {
                                        begin: LEAN_IDENT_RE
                                    }),
                                    PARAMS,
                                    {
                                        className: 'symbol',
                                        begin: /:=/,
                                        endsParent: true
                                    },
                                    {
                                        className: 'symbol',
                                        begin: /:/,
                                        endsParent: true
                                    },
                                ],
                                keywords: a
                            };

                            return {
                                name: 'lean',
                                keywords: a,
                                contains: [
                                    e.QUOTE_STRING_MODE,
                                    e.NUMBER_MODE,
                                    n,
                                    s,
                                    {
                                        className: 'doctag',
                                        begin: '/-[-!]',
                                        end: '-/'
                                    },
                                    LEAN_DEFINITION,
                                    {
                                        className: 'meta',
                                        begin: '@\\[',
                                        end: '\\]'
                                    },
                                    {
                                        className: 'meta',
                                        begin: '^attribute',
                                        end: '$'
                                    },
                                    {
                                        begin: /\u27e8/
                                    }
                                ]
                            }
                        }
                    )
                )
            }
        ) ()
        ;
        hljs.registerLanguage('lean', e)
    }
) ();
